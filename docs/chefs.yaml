paths:
  /:
    get:
      summary: Get the chef's profile
      tags:
        - chefs
      security:
        - bearerAuth: [] # no scopes for bearer auth
      responses:
        "200":
          description: Successfully fetched the chef's profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userProfile"

        "401":
          description: The token passed is invalid
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"
              examples:
                missingToken:
                  $ref: "#/components/examples/missingToken"

        "404":
          description: The chef couldn't be found
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"

        "500":
          description: An error occurred while fetching the chef's profile
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"

    post:
      summary: Create an account
      tags:
        - chefs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/credentials"
      responses:
        "201":
          description: Successfully created a new account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userInfo"

        "400":
          description: The request body is invalid
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"
              examples:
                invalidEmail:
                  $ref: "#/components/examples/invalidEmail"

        "500":
          description: An error occurred while creating an account
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"
              examples:
                emailAlreadyTaken:
                  $ref: "#/components/examples/emailAlreadyTaken"

    patch:
      summary: >-
        Send an email to change the chef's credentials.
        An ID token is optional if changing passwords.
      tags:
        - chefs
      security:
        - {} # no security
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/changeRequest"
      responses:
        "200":
          description: Successfully sent an email to verify the change request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/email"

        "400":
          description: The request body is invalid
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"
              examples:
                invalidEmail:
                  $ref: "#/components/examples/invalidEmail"

        "500":
          description: An error occurred while changing the credentials
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"
              examples:
                emailAlreadyTaken:
                  $ref: "#/components/examples/emailAlreadyTaken"

    delete:
      summary: Delete an account
      tags:
        - chefs
      security:
        - bearerAuth: []
      responses:
        "204":
          description: Successfully deleted the account

        "401":
          description: The token passed is invalid
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"
              examples:
                missingToken:
                  $ref: "#/components/examples/missingToken"

        "500":
          description: An error occurred while deleting the account
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"

  /verify:
    post:
      summary: Verify the chef's account
      tags:
        - chefs
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully sent a verification email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/email"

        "400":
          description: An error occurred while sending a verification email
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"
              examples:
                tooManyAttempts:
                  $ref: "#/components/examples/tooManyAttempts"
                userNotFound:
                  $ref: "#/components/examples/userNotFound"

        "401":
          description: The token passed is invalid
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"
              examples:
                missingToken:
                  $ref: "#/components/examples/missingToken"

  /login:
    post:
      summary: Login to the chef's account
      tags:
        - chefs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/credentials"
      responses:
        "200":
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userInfo"

        "400":
          description: The request body is invalid
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"
              examples:
                invalidEmail:
                  $ref: "#/components/examples/invalidEmail"
                invalidCredentials:
                  $ref: "#/components/examples/invalidCredentials"

  /logout:
    post:
      summary: Logout of the chef's account
      tags:
        - chefs
      security:
        - bearerAuth: []
      responses:
        "204":
          description: Successfully logged out

        "401":
          description: The token passed is invalid
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"
              examples:
                missingToken:
                  $ref: "#/components/examples/missingToken"

        "500":
          description: An error occurred while logging out
          content:
            application/json:
              schema:
                $ref: "..#/components/schemas/error"

components:
  schemas:
    userProfile:
      type: object
      properties:
        uid:
          type: string
          description: The unique identifier for the chef
        email:
          type: string
          description: The chef's email address
          format: email
        ratings:
          type: object
          description: >-
            Key-value pairs, where the key is the recipe ID and the value is the rating given
          additionalProperties:
            type: integer
        recentRecipes:
          type: object
          description: >-
            Key-value pairs, where the key is the recipe ID
            and the value is the timestamp the recipe was last viewed
          additionalProperties:
            type: string
            format: date-time
        favoriteRecipes:
          type: array
          items:
            type: string
            description: The ID of a favorite recipe
        token:
          type: string
          description: The ID token for the chef
    credentials:
      type: object
      properties:
        email:
          type: string
          description: The chef's email address
          format: email
        password:
          type: string
          description: The chef's password
          format: password
          minLength: 8
    userInfo:
      type: object
      properties:
        uid:
          type: string
          description: The unique identifier for the chef
        token:
          type: string
          description: The ID token for the chef
        emailVerified:
          type: boolean
          description: Whether or not the email address is verified
    changeRequest:
      type: object
      properties:
        type:
          type: string
          enum: ["email", "password"]
          description: The field to update (email = change email, password = reset password)
        email:
          type: string
          description: The email address to send a verification to
          format: email
    email:
      type: object
      # token may not be there if changing passwords
      required: ["kind", "email"]
      properties:
        kind:
          type: string
          description: The type of response gotten from the Firebase REST API
        email:
          type: string
          description: The chef's email
          format: email
        token:
          type: string
          description: The ID token for the chef

  examples:
    invalidEmail:
      value: { "error": "Invalid request: Invalid/missing email" }
    emailAlreadyTaken:
      value:
        { "error": "The email address is already in use by another account." }
    tooManyAttempts:
      value:
        {
          "error": "Failed to send a verification email: TOO_MANY_ATTEMPTS_TRY_LATER",
        }
    userNotFound:
      value:
        {
          "error":
            "Invalid Firebase token provided: Error: There is no user record corresponding
            to the provided identifier.",
        }
    missingToken:
      value:
        {
          "error":
            "Invalid Firebase token provided: Error: Decoding Firebase ID token failed.
            Make sure you passed the entire string JWT which represents an ID token.
            See https://firebase.google.com/docs/auth/admin/verify-id-tokens for details on
            how to retrieve an ID token.",
        }
    invalidCredentials:
      value: { "error": "Failed to login: INVALID_LOGIN_CREDENTIALS" }
