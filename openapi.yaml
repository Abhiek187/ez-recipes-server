openapi: 3.1.0

info:
  title: EZ Recipes
  description: An API that fetches recipes from spoonacular and MongoDB
  version: 2.1.0

servers:
  - url: https://ez-recipes-server.onrender.com
    description: Server deployed on render.com

paths:
  /api/recipes:
    get:
      summary: Get recipes by filters
      parameters:
        - in: query
          name: query
          schema:
            type: string
            minLength: 1
          description: Search query
        - in: query
          name: min-cals
          schema:
            type: number
            minimum: 0
            maximum: 2000
          description: Minimum calories
        - in: query
          name: max-cals
          schema:
            type: number
            minimum: 0
            maximum: 2000
          description: Maximum calories
        - in: query
          name: vegetarian
          schema:
            type: boolean
          allowEmptyValue: true
          description: Vegetarian recipes
        - in: query
          name: vegan
          schema:
            type: boolean
          allowEmptyValue: true
          description: Vegan recipes
        - in: query
          name: gluten-free
          schema:
            type: boolean
          allowEmptyValue: true
          description: Gluten-free recipes
        - in: query
          name: healthy
          schema:
            type: boolean
          allowEmptyValue: true
          description: Healthy recipes
        - in: query
          name: cheap
          schema:
            type: boolean
          allowEmptyValue: true
          description: Cheap recipes
        - in: query
          name: sustainable
          schema:
            type: boolean
          allowEmptyValue: true
          description: Sustainable recipes
        - in: query
          name: spice-level
          schema:
            # Form style & explode (multiple of the same parameter)
            # &spice-level=&spice-level=
            type: array
            items:
              type: string
              enum: ["none", "mild", "spicy"]
          description: Spice levels
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              # https://spoonacular.com/food-api/docs#Meal-Types
              enum:
                - "main course"
                - "side dish"
                - dessert
                - appetizer
                - salad
                - bread
                - breakfast
                - soup
                - beverage
                - sauce
                - marinade
                - fingerfood
                - snack
                - drink
                # Missing from spoonacular's docs
                - antipasti
                - starter
                - antipasto
                - "hor d'oeuvre"
                - lunch
                - "main dish"
                - dinner
                - "morning meal"
                - brunch
                - condiment
                - dip
                - spread
          description: Meal types
        - in: query
          name: culture
          schema:
            type: array
            items:
              type: string
              # https://spoonacular.com/food-api/docs#Cuisines
              enum:
                - African
                - Asian
                - American
                - British
                - Cajun
                - Caribbean
                - Chinese
                - "Eastern European"
                - European
                - French
                - German
                - Greek
                - Indian
                - Irish
                - Italian
                - Japanese
                - Jewish
                - Korean
                - "Latin American"
                - Mediterranean
                - Mexican
                - "Middle Eastern"
                - Nordic
                - Southern
                - Spanish
                - Thai
                - Vietnamese
                # Missing from spoonacular's docs
                - English
                - Scottish
                - "South American"
                - Creole
          description: Cuisines
      responses:
        "200":
          description: Successfully filtered recipes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/recipes"

        "400":
          description: Passed an invalid filter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                invalidFilter:
                  $ref: "#/components/examples/invalidFilter"

  /api/recipes/random:
    get:
      summary: Get a random, low-effort recipe
      responses:
        "200":
          description: Successfully returned a recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/recipe"

        "401":
          description: The API key is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                invalidApiKey:
                  $ref: "#/components/examples/invalidApiKey"

        "402":
          description: Exceeded daily quota
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                limitReached:
                  $ref: "#/components/examples/limitReached"

  /api/recipes/{id}:
    get:
      summary: Get a recipe by its ID
      parameters:
        - $ref: "#/components/parameters/recipeId"

      responses:
        "200":
          description: Successfully returned a recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/recipe"

        "400":
          description: The recipe ID isn't numeric
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                invalidRecipeId:
                  $ref: "#/components/examples/invalidRecipeId"

        "401":
          description: The API key is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                invalidApiKey:
                  $ref: "#/components/examples/invalidApiKey"

        "402":
          description: Exceeded daily quota
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                limitReached:
                  $ref: "#/components/examples/limitReached"

        "404":
          description: A recipe with the ID couldn't be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                nonExistentRecipeId:
                  $ref: "#/components/examples/nonExistentRecipeId"

  /api/terms:
    get:
      summary: Get all cooking terms
      responses:
        "200":
          description: Successfully returned all terms
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/terms"

components:
  parameters:
    recipeId:
      name: id
      in: path
      required: true
      description: The recipe ID
      schema:
        type: integer
        minimum: 0

  schemas:
    recipes:
      type: array
      items:
        $ref: "#/components/schemas/recipe"
    recipe:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
          description: The recipe's unique ID
        name:
          type: string
          description: The name of the recipe
        url:
          type: string
          description: The recipe page on spoonacular
        image:
          type: string
          description: A URL pointing to the recipe's image
        credit:
          type: string
          description: The source name where the recipe originates
        sourceUrl:
          type: string
          description: The source URL where the recipe originates
        healthScore:
          type: integer
          minimum: 0
          maximum: 100
          description: >
            A spoonacular measurement for how healthy a recipe is, between 0% and 100%
        time:
          type: integer
          minimum: 0
          maximum: 60 # low-effort recipes shouldn't take more than an hour to make
          description: The estimated cooking time for the recipe
        servings:
          type: integer
          minimum: 1
          description: The number of servings the recipe produces
        summary:
          type: string
          description: A brief description of the recipe
        types:
          type: array
          description: >
            All the meal types that correspond to the recipe.
            See https://spoonacular.com/food-api/docs#Meal-Types for all the supported dish types.
          items:
            type: string
        spiceLevel:
          type: string
          enum: ["none", "mild", "spicy", "unknown"]
          description: >
            The spice level of a recipe, based on the ingredients' Scoville heat units.
            If the spice level couldn't be determined, the value is set to "unknown".
        isVegetarian:
          type: boolean
          description: >
            true if the recipe doesn't contain any meat or meat by-products, such as bones or gelatin
        isVegan:
          type: boolean
          description: true if the recipe is vegetarian and doesn't contain eggs, dairy, or honey
        isGlutenFree:
          type: boolean
          description: >
            true if the recipe doesn't contain wheat, barley, rye, or other gluten-containing grains
        isHealthy:
          type: boolean
          description: true if the recipe has a high health score
        isCheap:
          type: boolean
          description: true if all the ingredients are affordable
        isSustainable:
          type: boolean
          description: true if making the recipe is good for the environment
        culture:
          type: array
          description: >
            All the cuisines that correspond to the recipe.
            See https://spoonacular.com/food-api/docs#Cuisines for all the supported cuisines.
          items:
            type: string
        nutrients:
          type: array
          description: >
            Nutritional information about the recipe, such as fat, carbs, and protein
          items:
            type: object
            properties:
              name:
                type: string
                description: The nutrient name
              amount:
                type: number
                minimum: 0
                description: The numerical amount of the nutrient
              unit:
                type: string
                description: The unit of measurement corresponding to the amount
        ingredients:
          type: array
          description: All the ingredients needed to make the recipe
          items:
            type: object
            properties:
              id:
                type: integer
                minimum: 0
                description: The ingredient's unique ID
              name:
                type: string
                description: The ingredient name
              amount:
                type: number
                minimum: 0
                description: The numerical amount of the ingredient
              unit:
                type: string
                description: The unit of measurement corresponding to the amount
        instructions:
          type: array
          description: >
            All the instructions for making the recipe,
            which could be split into multiple sections
          items:
            type: object
            properties:
              name:
                type: string
                description: >
                  The name of this section of steps, or "" if there's only one section
              steps:
                type: array
                description: Ordered steps for making the recipe in each section
                items:
                  type: object
                  properties:
                    number:
                      type: integer
                      minimum: 1
                      description: The step number
                    step:
                      type: string
                      description: Directions for each step
                    ingredients:
                      type: array
                      description: The ingredients used in each step
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            minimum: 0
                            description: The ingredient's unique ID
                          name:
                            type: string
                            description: The ingredient name
                          image:
                            type: string
                            description: >
                              The name of the ingredient's image. The image's URL would be
                              https://spoonacular.com/cdn/ingredients_100x100/IMAGE
                    equipment:
                      type: array
                      description: The kitchen equipment used in each step
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            minimum: 0
                            description: The equipment's unique ID
                          name:
                            type: string
                            description: The equipment name
                          image:
                            type: string
                            description: >
                              The name of the equipment's image. The image's URL would be
                              https://spoonacular.com/cdn/equipment_100x100/IMAGE
    error:
      type: object
      properties:
        error:
          type: string
          description: The error message
    terms:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            description: A unique object ID
          word:
            type: string
            description: The word
          definition:
            type: string
            description: The word's definition

  examples:
    invalidFilter:
      value: { "error": "Unknown spice-level received: unknown" }
    invalidRecipeId:
      value: { "error": "The recipe ID must be numeric" }
    invalidApiKey:
      value: { "error": "You are not authorized. Please read
            https://spoonacular.com/food-api/docs#Authentication" }
    limitReached:
      value:
        {
          "error":
            "Your daily points limit of 150 has been reached. Please upgrade your plan to
            continue using the API.",
        }
    nonExistentRecipeId:
      value: { "error": "A recipe with the id 0 does not exist." }
